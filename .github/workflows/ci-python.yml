name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache dependency
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
      - name: Run Tests
        run: |
          python app/handler.py test --verbosity 2 --settings event-driven-architecture.settings.test
      #      - name: Install coverage dependecy
      #        run: pip install coverage
      #      - name: Run Test With Coverage
      #        run: coverage run --branch --source=$GITHUB_WORKSPACE ./manage.py test contributions --noinput --parallel
      #      - name: Generate Coverage Report
      #        run: coverage xml -o test-coverage.xml
#      - name: Generate coverage report
#        run: |
#          pip install pytest-cov
#          pytest --cov-config=.coveragerc --cov=./ --cov-report=xml

#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v2
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
#          #          files: ./coverage1.xml,./coverage2.xml # optional
#          flags: unittests # optional
#          name: codecov-umbrella # optional
#          fail_ci_if_error: true # optional (default = false)
#          verbose: true # optional (default = false)
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}